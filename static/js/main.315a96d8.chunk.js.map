{"version":3,"sources":["utils/sleep.ts","context/auth-context.tsx","types.ts","context/user-context.tsx","components/Layout.tsx","components/Footer.tsx","components/Navbar.tsx","config/index.ts","features/auth/Login.tsx","features/shared/MyAccount.tsx","features/single-user/Dashboard.tsx","features/single-user/Integrations.tsx","utils/fake-data.ts","components/Table.tsx","features/doctor/Dashboard.tsx","features/doctor/Reports.tsx","features/doctor/Settings.tsx","features/doctor/PatientDashboard.tsx","app/App.tsx","app/AppProviders.tsx","index.tsx"],"names":["sleep","ms","Promise","resolve","setTimeout","AuthContext","React","undefined","AuthProvider","children","history","useHistory","user","setUser","isLoading","setIsLoading","error","setError","localStorage","getItem","JSON","parse","value","login","name","role","Error","fakeUser","id","faker","datatype","uuid","firstName","lastName","setItem","stringify","push","logout","removeItem","clearError","Provider","useAuth","context","UserRole","UserContext","UserProvider","useUser","isDoctor","Doctor","isSingleUser","SingleUser","Layout","Box","color","bg","display","flexDirection","minHeight","Main","style","flex","padding","Footer","textAlign","borderTop","Date","getFullYear","company","companyName","Navbar","UnderlineNav","sx","px","actions","Button","onClick","NavLink","to","Link","as","RouterNavLink","width","outline","config","repo","pkg","url","project","homepage","Login","mx","justifyContent","pt","pb","CircleOcticon","icon","HubotIcon","size","onSubmit","e","preventDefault","target","Heading","fontSize","fontWeight","mb","Flash","variant","my","Text","message","ButtonClose","float","borderColor","p","FormGroup","mt","Label","htmlFor","TextInput","type","block","contrast","RadioGroup","RadioInput","label","defaultChecked","ButtonPrimary","disabled","href","styled","div","attrs","className","props","MyAccount","maxWidth","SingleUserDashboard","src","image","avatar","alt","lorem","paragraph","SingleUserIntegrations","range","map","helpers","contextualCard","website","createTag","text","word","internet","createPatient","fake","email","phone","phoneNumber","age","number","min","max","tags","Table","columns","rows","renderCell","column","columnIndex","textTransform","row","rowIndex","DoctorDashboard","address","cityName","n","patient","cell","Array","isArray","t","join","Truncate","title","patients","userCard","DoctorReports","DoctorSettings","PatientDashboard","patientId","useParams","App","AuthenticatedApp","UnAuthenticatedApp","exact","path","component","DoctorApp","SingleUserApp","AppProviders","ThemeProvider","colorMode","BaseStyles","basename","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.315a96d8.chunk.js","sourcesContent":["export function sleep(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import * as React from 'react';\nimport faker from 'faker';\nimport { useHistory } from 'react-router';\n\nimport { User, UserRole } from 'types';\nimport { sleep } from 'utils/sleep';\n\ninterface AuthContextValue {\n  // User data coming from auth provider - some basic info, like userId,\n  // name, etc.\n  user: User | null;\n  isLoading: boolean;\n  error: Error | null;\n\n  login: (name: string, type: UserRole) => Promise<void>;\n  logout: () => void;\n  clearError: () => void;\n}\n\nconst AuthContext = React.createContext<AuthContextValue | undefined>(\n  undefined,\n);\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\nfunction AuthProvider({ children }: AuthProviderProps) {\n  const history = useHistory();\n\n  const [user, setUser] = React.useState<User | null>(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [error, setError] = React.useState<Error | null>(null);\n\n  React.useEffect(() => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      setUser(JSON.parse(user));\n    }\n  }, []);\n\n  const value: AuthContextValue = {\n    // State\n    user,\n    isLoading,\n    error,\n\n    // Actions\n    async login(name, role) {\n      setIsLoading(true);\n\n      // Simulate loading\n      await sleep(2000);\n\n      // Simple validation\n      if (!name) {\n        setError(new Error(`Name is required!`));\n        setIsLoading(false);\n        return;\n      }\n      const fakeUser: User = {\n        role,\n\n        // Generate some fake data\n        id: faker.datatype.uuid(),\n        firstName: name,\n        lastName: faker.name.lastName(),\n      };\n      setUser(fakeUser);\n      setIsLoading(false);\n\n      // Poor man's persistence\n      localStorage.setItem('user', JSON.stringify(fakeUser));\n      history.push('/dashboard');\n    },\n    logout() {\n      setUser(null);\n      localStorage.removeItem('user');\n      history.push('/');\n    },\n    clearError() {\n      setError(null);\n    },\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nfunction useAuth() {\n  const context = React.useContext(AuthContext);\n\n  if (context === undefined) {\n    throw new Error(`\"useUser\" must be used inside a \"UserProvider\"`);\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","export enum UserRole {\n  Doctor = 'Doctor',\n  SingleUser = 'Single User',\n}\n\nexport interface User {\n  role: UserRole;\n  id: string;\n  firstName: string;\n  lastName: string;\n}\n\nexport interface Patient {\n  id: string;\n  name: string;\n  email: string;\n  phone: string;\n  age: number;\n  tags: Tag[];\n}\n\nexport interface Tag {\n  text: string;\n  color: string;\n}\n","import * as React from 'react';\nimport { User, UserRole } from 'types';\n\n// Context model\n\ninterface UserContextValue {\n  user: User;\n}\n\nconst UserContext = React.createContext<UserContextValue | undefined>(\n  undefined,\n);\n\ninterface UserProviderProps {\n  user: User;\n  children: React.ReactNode;\n}\n\n// Provider\n\nfunction UserProvider({ user, children }: UserProviderProps) {\n  return (\n    <UserContext.Provider value={{ user }}>{children}</UserContext.Provider>\n  );\n}\n\n// Helper hook\n\nfunction useUser() {\n  const context = React.useContext(UserContext);\n\n  if (context === undefined) {\n    throw new Error(`\"useUser\" must be used inside a \"UserProvider\"`);\n  }\n\n  const { user } = context;\n\n  return {\n    ...user,\n    isDoctor() {\n      return user.role === UserRole.Doctor;\n    },\n    isSingleUser() {\n      return user.role === UserRole.SingleUser;\n    },\n  };\n}\n\nexport { UserProvider, useUser };\n","import { Box } from '@primer/components';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function Layout({ children }: Props) {\n  return (\n    <Box\n      color=\"text.white\"\n      bg=\"bg.primary\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      minHeight=\"100vh\"\n    >\n      {children}\n    </Box>\n  );\n}\n\nexport function Main({ children }: Props) {\n  return <div style={{ flex: 1, padding: 20 }}>{children}</div>;\n}\n","import faker from 'faker';\n\nexport default function Footer() {\n  return (\n    <footer style={{ textAlign: 'center', borderTop: '2px solid white' }}>\n      <p>\n        {new Date().getFullYear()} &copy; {faker.company.companyName()}\n      </p>\n    </footer>\n  );\n}\n","import * as React from 'react';\nimport { NavLink as RouterNavLink, NavLinkProps } from 'react-router-dom';\n\nimport { useAuth } from '../context/auth-context';\nimport { Button, UnderlineNav } from '@primer/components';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function Navbar({ children }: Props) {\n  const { logout } = useAuth();\n\n  return (\n    <UnderlineNav\n      sx={{ px: 4 }}\n      aria-label=\"Main navigation\"\n      actions={<Button onClick={logout}>Logout</Button>}\n    >\n      {children}\n    </UnderlineNav>\n  );\n}\n\nexport function NavLink({ to, children }: NavLinkProps) {\n  return (\n    <UnderlineNav.Link\n      as={RouterNavLink}\n      to={to}\n      sx={{\n        width: 110,\n        // Remove weird, flashing border on hover/focus\n        '&:focus, &:hover': {\n          outline: 'none',\n        },\n      }}\n    >\n      {children}\n    </UnderlineNav.Link>\n  );\n}\n","import pkg from '../../package.json';\n\nconst repo = {\n  name: pkg.name,\n  url: 'https://github.com/sitek94/' + pkg.name,\n};\n\nconst project = {\n  name: 'Healthcare Dashboard PoC',\n  url: pkg.homepage,\n};\n\nconst config = {\n  repo,\n  project,\n};\n\nexport default config;\n","import * as React from 'react';\nimport styled from 'styled-components';\nimport {\n  Box,\n  ButtonClose,\n  ButtonPrimary,\n  CircleOcticon,\n  Flash,\n  FormGroup,\n  Heading,\n  Link,\n  Text,\n  TextInput,\n} from '@primer/components';\nimport { HubotIcon } from '@primer/octicons-react';\n\nimport config from 'config';\nimport { UserRole } from 'types';\nimport { useAuth } from 'context/auth-context';\nimport Layout from 'components/Layout';\n\nexport default function Login() {\n  const { login, isLoading, error, clearError } = useAuth();\n\n  function handleSubmit(e: React.SyntheticEvent) {\n    e.preventDefault();\n\n    const target = e.target as typeof e.target & {\n      name: { value: string };\n      role: { value: UserRole };\n    };\n\n    const name = target.name.value;\n    const role = target.role.value;\n\n    login(name, role);\n  }\n\n  return (\n    <Layout>\n      <Box mx=\"auto\" width={340}>\n        <Box as=\"header\" display=\"flex\" justifyContent=\"center\" pt={5} pb={3}>\n          <CircleOcticon\n            icon={HubotIcon}\n            size={60}\n            sx={{\n              bg: 'text.primary',\n              color: 'text.inverse',\n              '> svg': { width: '85%' },\n            }}\n          />\n        </Box>\n\n        <main>\n          <form onSubmit={handleSubmit}>\n            <Heading\n              as=\"h1\"\n              color=\"text.primary\"\n              textAlign=\"center\"\n              fontSize={4}\n              fontWeight={300}\n              mb={3}\n            >\n              Sign in to Dashboard\n            </Heading>\n\n            {error && (\n              <Flash variant=\"danger\" my={3}>\n                <Box mx={2}>\n                  <Text color=\"text.primary\">{error.message}</Text>\n                  <ButtonClose onClick={clearError} sx={{ float: 'right' }} />\n                </Box>\n              </Flash>\n            )}\n\n            <Flash\n              sx={{\n                color: 'text.primary',\n                bg: 'bg.tertiary',\n                borderColor: 'border.secondary',\n                p: 20,\n              }}\n            >\n              <FormGroup mt={0}>\n                <FormGroup.Label htmlFor=\"firstName\">Name</FormGroup.Label>\n                <TextInput id=\"name\" name=\"name\" type=\"text\" block contrast />\n              </FormGroup>\n\n              <FormGroup>\n                <FormGroup.Label>Role</FormGroup.Label>\n                <RadioGroup>\n                  <RadioInput\n                    name=\"role\"\n                    label=\"Single User\"\n                    id={UserRole.SingleUser}\n                    value={UserRole.SingleUser}\n                    defaultChecked\n                  />\n                  <RadioInput\n                    name=\"role\"\n                    label=\"Doctor\"\n                    id={UserRole.Doctor}\n                    value={UserRole.Doctor}\n                  />\n                </RadioGroup>\n              </FormGroup>\n\n              <ButtonPrimary\n                type=\"submit\"\n                disabled={isLoading}\n                width=\"100%\"\n                display=\"block\"\n                mt={20}\n              >\n                {isLoading ? 'Signing in...' : 'Sign in'}\n              </ButtonPrimary>\n            </Flash>\n          </form>\n        </main>\n\n        <Flash\n          as=\"footer\"\n          sx={{\n            mt: 3,\n            textAlign: 'center',\n            borderColor: 'border.primary',\n            color: 'text.primary',\n            bg: 'bg.primary',\n          }}\n        >\n          Want to learn more?&nbsp;\n          <Link href={config.repo.url}>Check the code</Link>.\n        </Flash>\n      </Box>\n    </Layout>\n  );\n}\n\nconst RadioGroup = styled.div.attrs({\n  className: 'radio-group color-bg-primary',\n})`\n  > label {\n    width: 50%;\n  }\n`;\n\ninterface RadioInputProps extends React.HTMLProps<HTMLInputElement> {\n  label: string;\n}\n\nfunction RadioInput({ label, ...props }: RadioInputProps) {\n  return (\n    <>\n      <input className=\"radio-input\" type=\"radio\" {...props} />\n      <label className=\"radio-label \" htmlFor={props.id}>\n        {label}\n      </label>\n    </>\n  );\n}\n","import * as React from 'react';\nimport { Box, ButtonPrimary, FormGroup, TextInput } from '@primer/components';\n\nexport default function MyAccount() {\n  return (\n    <div className=\"markdown-body\">\n      <h1>My Account</h1>\n\n      <Box sx={{ maxWidth: '360px' }}>\n        <FormGroup>\n          <FormGroup.Label htmlFor=\"firstName\">First Name</FormGroup.Label>\n          <TextInput id=\"firstName\" type=\"text\" block contrast />\n        </FormGroup>\n        <FormGroup>\n          <FormGroup.Label htmlFor=\"lastName\">Last Name</FormGroup.Label>\n          <TextInput id=\"lastName\" type=\"text\" block contrast />\n        </FormGroup>\n      </Box>\n\n      <ButtonPrimary>Save</ButtonPrimary>\n    </div>\n  );\n}\n","import { useUser } from '../../context/user-context';\nimport faker from 'faker';\n\nexport default function SingleUserDashboard() {\n  const user = useUser();\n\n  return (\n    <div>\n      <h1>Hello, {user.firstName}</h1>\n      <img src={faker.image.avatar()} alt={user.firstName + ' avatar'} />\n      <p>{faker.lorem.paragraph(5)}</p>\n      <p>{faker.lorem.paragraph(5)}</p>\n    </div>\n  );\n}\n","import range from 'lodash/range';\nimport faker from 'faker';\n\nexport default function SingleUserIntegrations() {\n  return (\n    <div>\n      <h1>Your Integrations</h1>\n\n      <ul>\n        {range(10)\n          .map(() => faker.helpers.contextualCard())\n          .map(({ company, website }) => (\n            <li key={company.name}>\n              {company.name} &mdash; {website}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import { Patient, Tag } from '../types';\nimport range from 'lodash/range';\nimport faker from 'faker';\n\nexport function createTag(): Tag {\n  return {\n    text: faker.lorem.word(),\n    color: faker.internet.color(),\n  };\n}\n\nexport function createTags(): Tag[] {\n  return range(faker.datatype.number({ min: 1, max: 3 })).map(createTag);\n}\n\nexport function createPatient(): Patient {\n  return {\n    id: faker.datatype.uuid(),\n    name: faker.fake('{{name.firstName}} {{name.lastName}}'),\n    email: faker.internet.email(),\n    phone: faker.phone.phoneNumber(),\n    age: faker.datatype.number({ min: 18, max: 70 }),\n    tags: createTags(),\n  };\n}\n\nexport function createPatients(n: number): Patient[] {\n  return range(n).map(createPatient);\n}\n","import * as React from 'react';\n\n// TODO: Improve types\n// https://react.christmas/2020/22\n\ninterface TableProps<T> {\n  columns: Array<keyof T>;\n  rows: Array<T>;\n\n  renderCell: (column: keyof T, row: T) => React.ReactNode;\n}\n\nexport default function Table<T>({ columns, rows, renderCell }: TableProps<T>) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          {columns.map((column, columnIndex) => (\n            <th\n              key={columnIndex}\n              style={{ textTransform: 'capitalize', textAlign: 'left' }}\n            >\n              {column}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {rows.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {columns.map(column => renderCell(column, row))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import faker from 'faker';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { createPatients } from 'utils/fake-data';\nimport Table from 'components/Table';\nimport { Truncate } from '@primer/components';\n\nexport default function DoctorDashboard() {\n  return (\n    <div className=\"markdown-body\">\n      <h1>Overview of {faker.address.cityName()} Practice</h1>\n\n      <h2>Patients list:</h2>\n      <Table\n        columns={['name', 'age', 'email', 'phone', 'tags']}\n        rows={createPatients(10)}\n        renderCell={(column, patient) => {\n          const cell = patient[column];\n\n          // Name - link\n          if (column === 'name') {\n            return (\n              <td>\n                <RouterLink to={'/dashboard/' + patient.id}>{cell}</RouterLink>\n              </td>\n            );\n          }\n\n          // Tags\n          if (Array.isArray(cell)) {\n            const text = cell.map(t => t.text).join(', ');\n            return (\n              <td>\n                <Truncate title={text}>{text}</Truncate>\n              </td>\n            );\n          }\n\n          // Default\n          return <td>{cell}</td>;\n        }}\n      />\n    </div>\n  );\n}\n","import { Link } from 'react-router-dom';\nimport range from 'lodash/range';\nimport faker from 'faker';\n\nconst patients = range(10).map(() => ({\n  id: faker.datatype.uuid(),\n  ...faker.helpers.userCard(),\n}));\n\nexport default function DoctorReports() {\n  return (\n    <div className=\"markdown-body\">\n      <h1>Reports</h1>\n\n      <h2>Patients reports:</h2>\n      <ul>\n        {patients.map(patient => (\n          <li key={patient.id}>\n            <Link to={'/dashboard/' + patient.id}>{patient.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","export default function DoctorSettings() {\n  return (\n    <div>\n      <h1>Settings</h1>\n\n      <div>\n        <h2>Practice Details</h2>\n\n        <fieldset>\n          <div>\n            <label>Practice Name</label>\n            <input type=\"text\" />\n          </div>\n          <div>\n            <label>Practice Details</label>\n            <textarea />\n          </div>\n        </fieldset>\n\n        <button>Save</button>\n      </div>\n    </div>\n  );\n}\n","import faker from 'faker';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nconst patient = faker.helpers.userCard();\n\nexport default function PatientDashboard() {\n  const { patientId } = useParams<{ patientId: string }>();\n\n  return (\n    <div className=\"markdown-body\">\n      <Link to=\"/dashboard\">&larr; Back to Dashboard</Link>\n\n      <h1>Patient: {patient.name}</h1>\n      <p>Patient ID: {patientId}</p>\n\n      <img src={faker.image.avatar()} alt={'user avatar'} />\n      <p>{faker.lorem.paragraph(5)}</p>\n      <p>{faker.lorem.paragraph(5)}</p>\n    </div>\n  );\n}\n","import { Redirect, Route, Switch } from 'react-router';\n\nimport { useAuth } from 'context/auth-context';\nimport { UserProvider, useUser } from 'context/user-context';\n\nimport Layout, { Main } from 'components/Layout';\nimport Footer from 'components/Footer';\nimport Navbar, { NavLink } from 'components/Navbar';\n\nimport Login from 'features/auth/Login';\nimport MyAccount from 'features/shared/MyAccount';\nimport SingleUserDashboard from 'features/single-user/Dashboard';\nimport SingleUserIntegrations from 'features/single-user/Integrations';\nimport DoctorDashboard from 'features/doctor/Dashboard';\nimport DoctorReports from 'features/doctor/Reports';\nimport DoctorSettings from 'features/doctor/Settings';\nimport PatientDashboard from 'features/doctor/PatientDashboard';\n\n/**\n * User is either authenticated or not\n */\nexport default function App() {\n  const { user } = useAuth();\n\n  return user ? (\n    <UserProvider user={user}>\n      <AuthenticatedApp />\n    </UserProvider>\n  ) : (\n    <UnAuthenticatedApp />\n  );\n}\n\n/**\n * Show Login screen when not authenticated\n */\nfunction UnAuthenticatedApp() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n}\n\n/**\n * When authenticated start Doctor or SingleUser app\n */\nfunction AuthenticatedApp() {\n  const user = useUser();\n\n  if (user.isDoctor()) {\n    return <DoctorApp />;\n  }\n\n  if (user.isSingleUser()) {\n    return <SingleUserApp />;\n  }\n\n  return null;\n}\n\n/**\n * Single User specific app\n */\nfunction SingleUserApp() {\n  return (\n    <Layout>\n      <Navbar>\n        <NavLink to=\"/dashboard\">Dashboard</NavLink>\n        <NavLink to=\"/integrations\">Integrations</NavLink>\n        <NavLink to=\"/my-account\">My Account</NavLink>\n      </Navbar>\n      <Main>\n        <Switch>\n          <Route path=\"/dashboard\" component={SingleUserDashboard} />\n          <Route path=\"/integrations\" component={SingleUserIntegrations} />\n          <Route path=\"/my-account\" component={MyAccount} />\n          <Redirect to=\"/dashboard\" />\n        </Switch>\n      </Main>\n      <Footer />\n    </Layout>\n  );\n}\n\n/**\n * Doctor specific app\n */\nfunction DoctorApp() {\n  return (\n    <Layout>\n      <Navbar>\n        <NavLink to=\"/dashboard\">Dashboard</NavLink>\n        <NavLink to=\"/reports\">Reports</NavLink>\n        <NavLink to=\"/my-account\">My Account</NavLink>\n        <NavLink to=\"/settings\">Settings</NavLink>\n      </Navbar>\n      <Main>\n        <Switch>\n          <Route exact path=\"/dashboard\" component={DoctorDashboard} />\n          <Route path=\"/dashboard/:patientId\" component={PatientDashboard} />\n          <Route path=\"/reports\" component={DoctorReports} />\n          <Route path=\"/settings\" component={DoctorSettings} />\n          <Route path=\"/my-account\" component={MyAccount} />\n          {/*<Redirect to=\"/dashboard\" />*/}\n        </Switch>\n      </Main>\n      <Footer />\n    </Layout>\n  );\n}\n","import * as React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider, BaseStyles } from '@primer/components';\n\nimport { AuthProvider } from 'context/auth-context';\n\nimport pkg from '../../package.json';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function AppProviders({ children }: Props) {\n  return (\n    <ThemeProvider colorMode=\"night\">\n      <div data-color-mode=\"dark\" data-dark-theme=\"dark\">\n        <BaseStyles>\n          <Router basename={pkg.name}>\n            <AuthProvider>{children}</AuthProvider>\n          </Router>\n        </BaseStyles>\n      </div>\n    </ThemeProvider>\n  );\n}\n","import '@primer/css/index.scss';\nimport '@primer/css/forms/index.scss';\n\nimport ReactDOM from 'react-dom';\n\nimport App from 'app/App';\nimport AppProviders from 'app/AppProviders';\n\nReactDOM.render(\n  <AppProviders>\n    <App />\n  </AppProviders>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}