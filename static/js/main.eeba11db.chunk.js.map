{"version":3,"sources":["utils/sleep.ts","context/auth-context.tsx","types.ts","context/user-context.tsx","components/Layout.tsx","components/Footer.tsx","components/Navbar.tsx","features/auth/Login.tsx","features/shared/MyAccount.tsx","features/single-user/Dashboard.tsx","features/single-user/Integrations.tsx","features/doctor/Dashboard.tsx","features/doctor/Reports.tsx","features/doctor/Settings.tsx","features/doctor/PatientDashboard.tsx","components/App.tsx","context/index.tsx","index.tsx"],"names":["sleep","ms","Promise","resolve","setTimeout","authTokenKey","AuthContext","React","undefined","AuthProvider","children","history","useHistory","user","setUser","isLoading","setIsLoading","type","a","firstName","faker","name","lastName","address","street","streetName","city","cityName","localStorage","setItem","datatype","uuid","push","value","login","logout","removeItem","Provider","useAuth","context","Error","UserType","UserContext","UserProvider","useUser","isDoctor","Doctor","isSingleUser","SingleUser","Layout","style","minHeight","display","flexDirection","justifyContent","Main","flex","padding","Footer","textAlign","borderTop","Date","getFullYear","company","companyName","Navbar","alignItems","borderBottom","onClick","NavLink","props","activeStyle","color","Login","disabled","MyAccount","SingleUserDashboard","src","image","avatar","alt","lorem","paragraph","SingleUserIntegrations","range","map","helpers","contextualCard","website","patients","id","userCard","DoctorDashboard","patient","to","phone","DoctorReports","DoctorSettings","PatientDashboard","patientId","useParams","App","AuthenticatedApp","UnAuthenticatedApp","exact","path","component","DoctorApp","SingleUserApp","AppProviders","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeba11db.chunk.js","sourcesContent":["export function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","import * as React from \"react\";\nimport faker from \"faker\";\nimport { useHistory } from \"react-router\";\nimport { User, UserType } from \"types\";\nimport { sleep } from \"utils/sleep\";\n\nconst authTokenKey = \"auth-token\";\n\ninterface AuthContextValue {\n  // User data coming from auth provider\n  user: User | null;\n\n  login: (type: UserType) => void;\n  logout: () => void;\n  isLoading: boolean;\n}\n\nconst AuthContext = React.createContext<AuthContextValue | undefined>(\n  undefined\n);\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\nfunction AuthProvider({ children }: AuthProviderProps) {\n  const history = useHistory();\n\n  const [user, setUser] = React.useState<User | null>(null);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  async function login(type: UserType) {\n    setIsLoading(true);\n\n    // Simulate loading\n    await sleep(2000);\n\n    setUser({\n      type,\n\n      // Generate some fake data\n      firstName: faker.name.firstName(),\n      lastName: faker.name.lastName(),\n      address: {\n        street: faker.address.streetName(),\n        city: faker.address.cityName(),\n      },\n    });\n    localStorage.setItem(authTokenKey, faker.datatype.uuid());\n    setIsLoading(false);\n    history.push(\"/dashboard\");\n  }\n\n  function logout() {\n    setUser(null);\n    localStorage.removeItem(authTokenKey);\n    history.push(\"/\");\n  }\n\n  const value: AuthContextValue = {\n    user,\n    login,\n    logout,\n    isLoading,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nfunction useAuth() {\n  const context = React.useContext(AuthContext);\n\n  if (context === undefined) {\n    throw new Error(`\"useUser\" must be used inside a \"UserProvider\"`);\n  }\n\n  return context;\n}\n\nexport { AuthProvider, useAuth };\n","export enum UserType {\n  Doctor = \"Doctor\",\n  SingleUser = \"Single User\",\n}\n\nexport interface User {\n  type: UserType;\n  firstName: string;\n  lastName: string;\n  address: {\n    street: string;\n    city: string;\n  };\n}\n","import * as React from \"react\";\nimport { User, UserType } from \"types\";\n\n// Context model\n\ninterface UserContextValue {\n  user: User;\n}\n\nconst UserContext = React.createContext<UserContextValue | undefined>(\n  undefined\n);\n\ninterface UserProviderProps {\n  user: User;\n  children: React.ReactNode;\n}\n\n// Provider\n\nfunction UserProvider({ user, children }: UserProviderProps) {\n  return (\n    <UserContext.Provider value={{ user }}>{children}</UserContext.Provider>\n  );\n}\n\n// Helper hoook\n\nfunction useUser() {\n  const context = React.useContext(UserContext);\n\n  if (context === undefined) {\n    throw new Error(`\"useUser\" must be used inside a \"UserProvider\"`);\n  }\n\n  const { user } = context;\n\n  const extendedContext = {\n    ...user,\n    isDoctor() {\n      return user.type === UserType.Doctor;\n    },\n    isSingleUser() {\n      return user.type === UserType.SingleUser;\n    },\n  };\n\n  return extendedContext;\n}\n\nexport { UserProvider, useUser };\n","interface Props {\n  children: React.ReactNode;\n}\n\nexport default function Layout({ children }: Props) {\n  return (\n    <div\n      style={{\n        minHeight: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport function Main({ children }: Props) {\n  return <div style={{ flex: 1, padding: 20 }}>{children}</div>;\n}\n","import faker from \"faker\";\n\nexport default function Footer() {\n  return (\n    <footer style={{ textAlign: \"center\", borderTop: \"2px solid white\" }}>\n      <p>\n        {new Date().getFullYear()} &copy; {faker.company.companyName()}\n      </p>\n    </footer>\n  );\n}\n","import { NavLink as RouterNavLink, NavLinkProps } from \"react-router-dom\";\nimport { useAuth } from \"../context/auth-context\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function Navbar({ children }: Props) {\n  const { user, logout } = useAuth();\n\n  return (\n    <nav\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        padding: \"10px 20px\",\n        borderBottom: \"2px solid white\",\n      }}\n    >\n      <div>{children}</div>\n\n      <button onClick={logout}>Logout {user?.type}</button>\n    </nav>\n  );\n}\n\nexport function NavLink(props: NavLinkProps) {\n  return <RouterNavLink {...props} activeStyle={{ color: \"cornflowerblue\" }} />;\n}\n","import { UserType } from \"types\";\nimport { useAuth } from \"../../context/auth-context\";\n\nexport default function Login() {\n  const { login, isLoading } = useAuth();\n\n  return (\n    <main style={{ textAlign: \"center\" }}>\n      <h1>Login</h1>\n\n      <section>\n        <button onClick={() => login(UserType.Doctor)} disabled={isLoading}>\n          Login as Doctor\n        </button>\n        <button onClick={() => login(UserType.SingleUser)} disabled={isLoading}>\n          Login as Single User\n        </button>\n      </section>\n\n      {isLoading && <p>Loading...</p>}\n    </main>\n  );\n}\n","export default function MyAccount() {\n  return (\n    <div>\n      <h1>My Account</h1>\n\n      <fieldset>\n        <div>\n          <label>First Name</label>\n          <input type=\"text\" />\n        </div>\n        <div>\n          <label>Last Name</label>\n          <input type=\"text\" />\n        </div>\n      </fieldset>\n\n      <button>Save</button>\n    </div>\n  );\n}\n","import { useUser } from \"../../context/user-context\";\nimport faker from \"faker\";\n\nexport default function SingleUserDashboard() {\n  const user = useUser();\n\n  return (\n    <div>\n      <h1>Hello, {user.firstName}</h1>\n      <img src={faker.image.avatar()} alt={user.firstName + \" avatar\"} />\n      <p>{faker.lorem.paragraph(5)}</p>\n      <p>{faker.lorem.paragraph(5)}</p>\n    </div>\n  );\n}\n","import range from \"lodash/range\";\nimport faker from \"faker\";\n\nexport default function SingleUserIntegrations() {\n  return (\n    <div>\n      <h1>Your Integrations</h1>\n\n      <ul>\n        {range(10)\n          .map(() => faker.helpers.contextualCard())\n          .map(({ company, website }) => (\n            <li key={company.name}>\n              {company.name} &mdash; {website}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport { useUser } from \"../../context/user-context\";\nimport range from \"lodash/range\";\nimport faker from \"faker\";\n\nconst patients = range(10).map(() => ({\n  id: faker.datatype.uuid(),\n  ...faker.helpers.userCard(),\n}));\n\nexport default function DoctorDashboard() {\n  const user = useUser();\n\n  return (\n    <div>\n      <h1>Overview of {user.address.city} practice</h1>\n\n      <h2>Patients list:</h2>\n      <table>\n        <thead>\n          <tr style={{ textAlign: \"left\" }}>\n            <th>Full Name</th>\n            <th>Phone</th>\n          </tr>\n        </thead>\n        <tbody>\n          {patients.map((patient) => (\n            <tr key={patient.id}>\n              <td>\n                <Link to={\"/dashboard/\" + patient.id}>{patient.name}</Link>\n              </td>\n              <td>{patient.phone}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n","import { Link } from \"react-router-dom\";\nimport range from \"lodash/range\";\nimport faker from \"faker\";\n\nconst patients = range(10).map(() => ({\n  id: faker.datatype.uuid(),\n  ...faker.helpers.userCard(),\n}));\n\nexport default function DoctorReports() {\n  return (\n    <div>\n      <h1>Reports</h1>\n\n      <h2>Patients reports:</h2>\n      <ul>\n        {patients.map((patient) => (\n          <li key={patient.id}>\n            <Link to={\"/dashboard/\" + patient.id}>{patient.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","export default function DoctorSettings() {\n  return (\n    <div>\n      <h1>Settings</h1>\n\n      <div>\n        <h2>Practice Details</h2>\n\n        <fieldset>\n          <div>\n            <label>Practice Name</label>\n            <input type=\"text\" />\n          </div>\n          <div>\n            <label>Practice Details</label>\n            <textarea />\n          </div>\n        </fieldset>\n\n        <button>Save</button>\n      </div>\n    </div>\n  );\n}\n","import faker from \"faker\";\nimport { useParams } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nconst patient = faker.helpers.userCard();\n\nexport default function PatientDashboard() {\n  const { patientId } = useParams<{ patientId: string }>();\n\n  return (\n    <div>\n      <Link to=\"/dashboard\">&larr; Back to Dashboard</Link>\n\n      <h5>Patient ID: {patientId}</h5>\n\n      <h1>Patient: {patient.name}</h1>\n\n      <img src={faker.image.avatar()} alt={\"user avatar\"} />\n      <p>{faker.lorem.paragraph(5)}</p>\n      <p>{faker.lorem.paragraph(5)}</p>\n    </div>\n  );\n}\n","import { Redirect, Route, Switch } from \"react-router\";\n\nimport { useAuth } from \"context/auth-context\";\nimport { UserProvider, useUser } from \"context/user-context\";\n\nimport Layout, { Main } from \"components/Layout\";\nimport Footer from \"components/Footer\";\nimport Navbar, { NavLink } from \"components/Navbar\";\n\nimport Login from \"features/auth/Login\";\nimport MyAccount from \"features/shared/MyAccount\";\nimport SingleUserDashboard from \"features/single-user/Dashboard\";\nimport SingleUserIntegrations from \"features/single-user/Integrations\";\nimport DoctorDashboard from \"features/doctor/Dashboard\";\nimport DoctorReports from \"features/doctor/Reports\";\nimport DoctorSettings from \"features/doctor/Settings\";\nimport PatientDashboard from \"features/doctor/PatientDashboard\";\n\n/**\n * User is either authenticated or not\n */\nexport default function App() {\n  const { user } = useAuth();\n\n  return user ? (\n    <UserProvider user={user}>\n      <AuthenticatedApp />\n    </UserProvider>\n  ) : (\n    <UnAuthenticatedApp />\n  );\n}\n\n/**\n * Show Login screen when not authenticated\n */\nfunction UnAuthenticatedApp() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n}\n\n/**\n * When authenticated start Doctor or SingleUser app\n */\nfunction AuthenticatedApp() {\n  const user = useUser();\n\n  if (user.isDoctor()) {\n    return <DoctorApp />;\n  }\n\n  if (user.isSingleUser()) {\n    return <SingleUserApp />;\n  }\n\n  return null;\n}\n\n/**\n * Single User specific app\n */\nfunction SingleUserApp() {\n  return (\n    <Layout>\n      <Navbar>\n        <NavLink to=\"/dashboard\">Dashboard</NavLink>\n        <NavLink to=\"/integrations\">Integrations</NavLink>\n        <NavLink to=\"/my-account\">My Account</NavLink>\n      </Navbar>\n      <Main>\n        <Switch>\n          <Route path=\"/dashboard\" component={SingleUserDashboard} />\n          <Route path=\"/integrations\" component={SingleUserIntegrations} />\n          <Route path=\"/my-account\" component={MyAccount} />\n        </Switch>\n      </Main>\n      <Footer />\n    </Layout>\n  );\n}\n\n/**\n * Doctor specific app\n */\nfunction DoctorApp() {\n  return (\n    <Layout>\n      <Navbar>\n        <NavLink to=\"/dashboard\">Dashboard</NavLink>\n        <NavLink to=\"/reports\">Reports</NavLink>\n        <NavLink to=\"/my-account\">My Account</NavLink>\n        <NavLink to=\"/settings\">Settings</NavLink>\n      </Navbar>\n      <Main>\n        <Switch>\n          <Route exact path=\"/dashboard\" component={DoctorDashboard} />\n          <Route path=\"/dashboard/:patientId\" component={PatientDashboard} />\n          <Route path=\"/reports\" component={DoctorReports} />\n          <Route path=\"/settings\" component={DoctorSettings} />\n          <Route path=\"/my-account\" component={MyAccount} />\n        </Switch>\n      </Main>\n      <Footer />\n    </Layout>\n  );\n}\n","import * as React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport { AuthProvider } from \"./auth-context\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function AppProviders({ children }: Props) {\n  return (\n    <Router>\n      <AuthProvider>{children}</AuthProvider>\n    </Router>\n  );\n}\n","import \"./index.css\";\n\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport AppProviders from \"./context\";\n\nReactDOM.render(\n  <AppProviders>\n    <App />\n  </AppProviders>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}